# create db's
sudo -u postgres dropdb -W contours
sudo -u postgres createdb -W contours
sudo -u postgres psql -W -d contours -c 'CREATE EXTENSION postgis;'

sudo -u postgres createdb -W contours_20
sudo -u postgres psql -W -d contours_20 -c 'CREATE EXTENSION postgis;'

sudo apt install osm2pgsql

# load initial contours, to create the scheme
osm2pgsql --slim -d contours -U postgres -W -C 2000 --number-processes 6 --style ./contours.style ./contours.pbf
osm2pgsql --slim -d contours_20 -U postgres -W -C 2000 --number-processes 6 --style ./contours.style ./contours.pbf

# Truncate tables
sudo -u postgres psql -W -d contours -c 'TRUNCATE TABLE planet_osm_line;'
sudo -u postgres psql -W -d contours -c 'TRUNCATE TABLE planet_osm_ways;'

sudo -u postgres psql -W -d contours_20 -c 'TRUNCATE TABLE planet_osm_line;'
sudo -u postgres psql -W -d contours_20 -c 'TRUNCATE TABLE planet_osm_ways;'

# load shapefiles
# Create qgis docker
cd /media/duvi/Extreme/TopoOSM/docker-qgis-desktop/2.14
docker build -t kartoza/qgis-desktop .

./run_qgis_docker.sh "/media/duvi/Extreme/TopoOSM/to_docker:/src -v /media/duvi/Extreme/TopoOSM/OpenTopoMap/raw:/input -w /src --net=host" "/bin/bash"
export PYTHONPATH=/usr/share/qgis/python
./load_shapefiles_to_db.sh /input/output_27/shp 127.0.0.1 postgres /input/output_27/load_log.txt 6

# install mod_tile with switch2osm instructions
# compile tilemill project to mapnik.xml with switch2osm instructions
# add <Parameter name="type">gdal</Parameter> to raster datasources in the mapnik.xml
# track renderd error messages, and target them


# track renderd 
